generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id         BigInt   @id @default(autoincrement())
  externalId String   @unique @default(uuid()) @map("external_id")
  createdAt  DateTime @default(now()) @map("created_at")
  updatedAt  DateTime @updatedAt @map("updated_at")

  name       String
  email      String   @unique
  password   String
  phone      String?
  avatar     String?

  pets           Pet[]
  adoteRequests  AdoteRequest[]

  @@map("users")
}

model Pet {
  id          BigInt   @id @default(autoincrement())
  externalId  String   @unique @default(uuid()) @map("external_id")
  ownerId     BigInt   @map("owner_id")
  createdAt   DateTime @default(now()) @map("created_at")
  updatedAt   DateTime @updatedAt @map("updated_at")

  name        String
  lore        String?
  birthDay    DateTime @map("birth_day")
  species     String
  breed       String
  gender      String
  color       String?
  city        String
  state       String
  uf          String
  isCastrated Boolean  @map("is_castrated")
  isAdote     Boolean  @map("is_adote")

  owner       User       @relation(fields: [ownerId], references: [id])
  files       PetFile[]
  adoteRequests AdoteRequest[]

  @@map("pets")
}

model PetFile {
  id          BigInt   @id @default(autoincrement())
  externalId  String   @unique @default(uuid()) @map("external_id")
  petId       BigInt   @map("pet_id")
  createdAt   DateTime @default(now()) @map("created_at")
  updatedAt   DateTime @updatedAt @map("updated_at")

  path        String
  mimeType    String   @map("mime_type")
  size        BigInt
  extension   String
  type        String
  description String?
  orderIndex  Int      @default(0) @map("order_index")

  pet         Pet      @relation(fields: [petId], references: [id])

  @@map("pets_files")
}

model AdoteRequest {
  id          BigInt   @id @default(autoincrement())
  externalId  String   @unique @default(uuid()) @map("external_id")
  userId      BigInt   @map("user_id")
  petId       BigInt   @map("pet_id")
  createdAt   DateTime @default(now()) @map("created_at")
  updatedAt   DateTime @updatedAt @map("updated_at")

  reason      String

  user        User @relation(fields: [userId], references: [id])
  pet         Pet  @relation(fields: [petId], references: [id])

  @@map("adote_requests")
}
